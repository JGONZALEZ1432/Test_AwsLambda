name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create or update Lambda function
        run: |
          aws lambda create-function \
            --function-name my-function \
            --runtime nodejs14.x \
            --role arn:aws:iam::123456789012:role/lambda-execution-role \
            --handler dist/index.handler \
            --zip-file fileb://dist/my-function.zip \
            --timeout 10 \
            --memory-size 128 \
            --description "My Lambda function deployed with GitHub Actions"

      - name: Test Lambda function
        run: |
          aws lambda invoke \
            --function-name my-function \
            --payload '{"key": "value"}' \
            response.json

      - name: Clean up old Lambda versions
        run: |
          aws lambda list-versions-by-function \
            --function-name my-function \
            --query "reverse(sort_by(Versions, &LastModified))[1:-3].Version" \
            --output text \
            | xargs -I {} aws lambda delete-function \
              --function-name my-function \
              --qualifier {}

      - name: Clean up old Lambda layer versions
        run: |
          aws lambda list-layer-versions \
            --layer-name my-layer \
            --query "reverse(sort_by(LayerVersions, &CreatedDate))[1:-3].Version" \
            --output text \
            | xargs -I {} aws lambda delete-layer-version \
              --layer-name my-layer \
              --version-number {}

